                            ОСНОВЫ JS
       1)ПЕРЕМЕННЫЕ
    Числовые ПЕРЕМЕННЫЕ
int - 0, 6, -58, 43903
float - 0.5, 6.9, -58.00009, 43903.099   
    Строковые ПЕРЕМЕННЫЕ
char - 'a', 'e', 'd'
string - "asd", "eee", "dss"
    Булевская ПЕРЕМЕННАЯ
bool - true, false
        Объявления переменных в JS
let НАЗВАНИЕ; - объявления без начального значения
let НАЗВАНИЕ = НАЧАЛЬНОЕ_ЗНАЧЕНИЕ; - объявления с начальным значением
        ОПЕРАЦИИ над переменными
    Арифметические операции
let x = 7;
let y = 2;
   + сложение
x+5; 12
y-x; -5
'H' + 6; H6
'H' - 6; Error
   * / УМНОЖЕНИЕ И ДЕЛЕНИЕ  
   = - приравнивание
x=2+y;//4
y=2+x;//6   



alert(СООБЩЕНИЕ)
                                            ФУНКЦИИ В JS
                                        ОФОРМЛЕНИЕ ФУНКЦИЙ      
        function НАЗВАНИЕ(){
            ДЕЙСТВИЕ
        }
                function callAlert(){
                    alert()
                }
                                        ТИПЫ ФУНКЦИЙ
                                        ПУСТАЯ ФУНКЦИЯ
        function doSomething(){
            alert();
            alert();
        }
                                        АРГУМЕНТНАЯ ФУНКЦИЯ
        function saySomething(message, person){
            alert(message);
            let txt = person + ", я отправил ваше сообщение кому-то"
            alert(txt)
        }
                                        ВЫЗОВ ФУНКЦИИ
        doSomething();
        saySomething("Привет тебе от меня!","Владимир")




if(УСЛОВИЕ){
    ДЕЙСТВИЕ
}

Ulan23.06.2020
win+R - вызывает окно запуска программ
cmd - программа Командная консоль
ping - проверка качества (в мс) связи с ресурсом
tracert - трассировка пакета до ресурса
Ulan23.06.2020
<!-- Теги в HTML -->
<ТЕГ> - одинарный
<ТЕГ></ТЕГ> - парный
<!-- Главные теги -->
<!DOCTYPE html> - HTML5 
<html></html> - граница документа index.html
<head></head> - Преднастройка страницы
<body></body> - тело сайта/страницы


<!-- Теги -->
<title></title> - Название вкладки
Ulan23.06.2020
<!-- ТЕГИ -->
<br> - добавление красной строки
<hr> - добавление красной строки c горизонтальной линией
<!-- Теги формата текста -->
<b></b> - жирный текст
<i></i> - курсив (наклонный текст)
<strong></strong> - жирный текст
<em></em> - курсив (наклонный текст)
<ins></ins> - подчеркивает
<del></del> - зачеркивает
<meta charset="utf-8"> - настройка кодировка страницы на unicode-8
<!-- Горячие клавишы -->
tab - добавления отступа

ctrl + ] - добавления отступа
ctrl + [ - удаление отступа

ctrl + shift + s - сохранить КАК
ctrl + s - сохранить

ctrl + c - копировтаь
ctrl + v - вставить

ctrl + x - копировать и вырезать
Ulan23.06.2020
<!-- Заголовки -->
<h1></h1> 
<h2></h2>
<h3></h3>
<h4></h4>
<h5></h5>
<h6></h6>
Ulan23.06.2020
<p></p> - абзац
Ulan30.06.2020
// Горячие клавиши
ctrl+f - поиск слова
ctrl+shift+f - поиск и замена слова
ctrl+z - отмена действия
Ulan30.06.2020
prtScn - скриншот всех рабочих столов
alt + prtSnc - скриншот активного окна/приложения

либо используем программу Ножницы
Ulan30.06.2020
// Подключение таблицы стиля 
<link rel="stylesheet" type="text/css" href="НАЗВАНИЕ ФАЙЛА">
/Cинтаксис CSS/
СЕЛЕКТОР{
    СВОЙСТВО: ПАРАМЕТР;
    СВОЙСТВО: ПАРАМЕТР;
    СВОЙСТВО: ПАРАМЕТР;
}
.Свойства CSS.
color: ЦВЕТ;
Ulan30.06.2020
<span></span> - просто текст
Ulan30.06.2020
/Свойства CSS/
font-weight: ТОЛЩИНА;
font-style: italic;
text-decoration: тип выделения;
Ulan30.06.2020
<!-- Аттрибуты -->
<!-- Уточняющие аттрибуты -->
id - уточнение единичного объекта из группы тегов
class - уточнение из группы объектов по общему признаку
Ulan30.06.2020
/* Селекторы в CSS */
НАЗВАНИЕ ТЕГА - span
НАЗВАНИЕ ID - #bold
НАЗВАНИЕ CLASS - .big
font-size: РАЗМЕР_В_PT;   font-size: 24pt;
Ulan07.07.2020
<!-- Устанавливаем пакет Emmet -->
1) ctrl+shift+p
2) Пишем в окне Install и выбираем Install Package
3) Пишем в окне Emmet и выбираем Emmet
4) Перезапустить Sublime

<!-- Проверка Emmet -->
Пишем название тега (например p) и нажимаем ctrl+E
Ulan07.07.2020
<!-- Команды Emmet (выполнение команды ctrl+E) -->
1) Создать тег - НАЗВАНИЕТЕГА
span => <span></span>
======
2) Тег с id или class - НАЗВАНИЕТЕГА#НАЗВАНИЕID.НАЗВАНИЕКЛАССА
span#red.underline =>  <span id="red" class="underline"></span>
span.underline <span class="underline"></span>
span#red <span id="red"></span>
======
3) Внедрение тега. Выделить текст и нажать на ctrl+shift+G

<p>Человек-<b>кот</b> <del>пришел за колбасой</del> а нашел лишь масло</p>
Ulan07.07.2020
<!-- Теги -->
<img src="ПУТЬ И НАЗВАНИЕ КАРТИНКИ" alt="ТЕКСТ КАРТИНКИ" width="ШИРИНА" height="ВЫСОТА">
Ulan07.07.2020
<!-- Тег списка -->
<ol></ol> - список типа нумеровочный
<ul></ul> - список типа маркировочный

<li></li> - позиция списка


<!-- Синтаксис Emmet -->
1) НАЗВАНИЕТЕГА>ВНУТРЕННИЙТЕГ
    p>b
   <p><b></b></p>

2) НАЗВАНИЕ_ТЕГА*КОЛИЧЕСТВО
    span*5
    <span></span>
    <span></span>
    <span></span>
    <span></span>
    <span></span>
Ulan07.07.2020
/Свойства CSS/
width: РАЗМЕР(в px);
transition: ВРЕМЯ ТИП_ПЕРЕХОДА;
text-shadow: X Y РАЗМЫТИЕ ЦВЕТ;
Ulan07.07.2020
/Псевдоклассов в CSS/
/* Наведение мыши */
СЕЛЕКТОР:hover
Ulan15.07.2020
<!-- Теги HTML -->
<table></table> - таблица
<tr></tr> - строка таблицы
<td></td> - ячейка таблицы
Ulan15.07.2020
<!-- EMMET комманды -->
<!-- Передача сообщения внутрь парного тега -->
span{ТЕКСТ ВНУТРИ СПАН} => 
<span>ТЕКСТ ВНУТРИ СПАН</span>

ul>li{Заглушка для списка}*2 => 
<ul>
    <li>Заглушка для списка</li>
    <li>Заглушка для списка</li>
</ul>

<!-- Математика EMMET -->
li*5 =>
<li></li>
<li></li>
<li></li>
<li></li>
<li></li>

span+li =>
<span></span>
<li></li>
Ulan15.07.2020
/Свойства CSS/
border: ТОЛЩИНА ТИП_ЛИНИИ ЦВЕТ
Ulan15.07.2020

Ulan15.07.2020
/Spacing/
margin - расстояние между элементами
border - Граница элемента
padding - Расстояние между контентом и Border

top - вверх
left - лево
right - право
bottom - низ
Ulan15.07.2020
background-color: ЦВЕТ;  -- покраска элемента
Ulan15.07.2020
border-spacing: РАССТОЯНИЕ; - Расстояние между ячейками (пишется для table)
/Псевдокласс/
:nth-child(ПРАВИЛО) - выборка элемента/элементов из группы элементов
:nth-child(13)    - выборка 13 элемента
:nth-child(2n)    - все ЧЁТНЫЕ элементы (n - любое число от 0...бесконечности)
:nth-child(2n+1)    - все НЕЧЁТНЫЕ элементы
:nth-child(n)    - все элементы
border-radius: СКРУГЛЕННОСТЬ(%);
Ulan21.07.2020
<!-- HTML  -->
<!-- Объединение ячеек -->
<!-- Аттрибуты  -->
colspan - расширение по колонке/столбцу
rowspan - расширение по строкам
Ulan21.07.2020
/* CSS */
text-align: center|left|right; - прилигание текста
<!-- Теги HTML -->
<a href="АДРЕС_ССЫЛКИ">ТЕКСТ ССЫЛКИ</a> - ссылка на страницу
Ulan21.07.2020
/* Псевдо классы */
:active - когда нажали мышкой
:link - псевдокласс тега а, который описывает для непосещенных ссылок
:visited - псевдокласс тега а, который описывает для посещенных ссылок
Ulan28.07.2020
<!-- HTML -->
<!-- Аттрибуты  -->
target - аттрибут тега а, который указывает куда загружать нашу страницу
       = "_self" - загрузить страницу в текущее окно
       = "_blank" - загружает страницу в новое окно брауза
= "_parent" - загружается страницу в родительский фрейм
       = "_top" - выгружает/поднимает ресурс поверх всех фреймов
<!-- ТЕГ HTML -->
<iframe src="" frameborder="0"></iframe> - фрейм для загрузки доп контента
Ulan28.07.2020
<!-- Аттрибут -->
name - добавление имени для нашего элемента-HTML
Ulan28.07.2020
<!-- ТЕГ HTML -->

<frameset></frameset> - группа фреймов
<frame></frame>  - фрейм
Ulan28.07.2020
<!-- Аттрибуты frameset -->
rows - размер (%) для фрейма по высоте 
cols - размер (%) для фрейма по ширины
Ulan04.08.2020
<script src="script.js"></script> - подключение скрипта
ANTOSKA04.08.2020
int - Целое число.
float - Число с плавающей точкой.
char - Символ.
string - Текстовая переменная.
Bool - Переменная обозначающая правду или ложь.(True/False)
Ulan04.08.2020
// Основы JS

// Переменные
// Типы переменных
// Числовые переменные
int - 0, 6, -58, 43903
float - 0.5 , 6.147, -58.0001, 43903.5
// Строковым переменным
char - 'a', 'ы', '!', '4'
String - "asd" , "ыаыа", "!5+аыв", "4563218"
// Булевская переменна
bool - true, false


// Объявления переменных в JS
let НАЗВАНИЕ; // объявления без начального значения
let НАЗВАНИЕ = НАЧАЛЬНОЕ_ЗНАЧЕНИЕ; // объявления с начальным значением

let x; 
let y = 5;


// Операции над переменными 
// Арифметические операции
let x = 7;
let y = 2;

// + сложение  - вычитание
x + 5; //12
y - x; //-5 
2 + 2; //4
'H' + 6; //H6
'H' - 6; // Error

// * умножение / деление
x * 5; // 35
y / x; // 0.28
22; // 4
'H'6; // Узнать чему равняется данное выражение

x + 27/y - 2x*y + 1 // Ответ__

// =  приравнивание
x = 2 + y; // 4
y = 2 + x; // 6
y = y + y; // 12
y / x; // 3
let c = y + x; //16
alert(СООБЩЕНИЕ); - вызывает окно уведомления для нашего пользователя
Ulan04.08.2020
git init 
git status
git add -A
git commit -m "СООБЩЕНИЕ"
git log
git config --local user.name "Nickname"
git config --local user.email "email"
Ulan11.08.2020
<!-- Кнопки в HTML -->
    <input type="button" value="ТЕКСТКНОПКИ">
    <button>ТЕКСТКНОПКИ</button>
Ulan11.08.2020
// Функции в JS
// Оформление функций
function НАЗВАНИЕ(АРГУМЕНТЫ){
    ДЕЙСТВИЕ;
}
function callAlert(){
    alert();
}
// Типы функций
// Пустая функция
function doSomething(){
    alert();
    alert();
}
// Аргументная функция
function saySomething(message, person){
    alert(message);
    let txt = person + ", я отправил ваше сообщение кому-то"
    alert(txt);
}

// Вызов функции
НАЗВАНИЕ();
НАЗВАНИЕ(АРГУМЕНТЫ);
doSomething();
saySomething("Привет тебе от меня!", "Антон")
Ulan11.08.2020
// Изменение элементов-HTML используя JS
// 1) Создаём переменную с HTML
// document.getElementById("НАЗВАНИЕ ИДЕНТИФИКАТОРА")
let div = document.getElementById("result");
// Вывести в консоль разработчика
console.log(div); 

// 2) Использовать уже созданную переменную нашим HTML документом по названию id
console.log(result);
Ulan11.08.2020
.. Работа с gitHub
git remote add origin ССЫЛКА НА РЕПОЗИТОРИЙ
git push -u origin master        ---Загрузка в gitHub
Ulan18.08.2020
// Event-Функция
function setResult(event){

}


// Обработчик события
ЭЛЕМЕНТ.addEventListener(СОБЫТИЕ, EVENT-ФУНКЦИЯ);
Ulan18.08.2020
// Элемент вызвавший событие
    event.target
Ulan18.08.2020
// вывести в консоль
    console.log(СООБЩЕНИЕ);
Ulan18.08.2020
// Код клавиши
event.keyCode
// Значение клавиши
event.key
Для детского садика
Как запушить новый коммит
1) Открыть git bash
2) git add -A
3) git commit -m "СООБЩЕНИЕ"
4) git push
Ulan25.08.2020
// Условная конструкция if
    // if
    if(УСЛОВИЕ){
        ДЕЙСТВИЕ
    }
    // if else
    if(УСЛОВИЕ){
        ДЕЙСТВИЕ1
    }
    else{
        ДЕЙСТВИЕ2
    }
    // if else if else if else..........
    if(УСЛОВИЕ1){
        ДЕЙСТВИЕ1
    }
    else if(УСЛОВИЕ2){
        ДЕЙСТВИЕ2
    }
    else if(УСЛОВИЕ3){
        ДЕЙСТВИЕ3
    }
    else{
        ДЕЙСТВИЕ
    }
Ulan25.08.2020
// Условные операции 
    let a = 5;
    let b = 7;

    // >  -  Больше?
    a > 5; // false
    b > a; // true
    -3 > a-10; // true

    // <  -  Меньше?
    a < 5; // false
    b < a; // false
    -3 < a-10; // false

    // >=  -  Больше или равно?
    a >= 5; // true
    b >= a; // true
    -3 >= a-10; // true

    // <=  -  Меньше или равно?
    a <= 5; // true
    b <= a; // false
    -3 <= a-10; // false

    // ==   -  Равняется ли?
    a == 5; // true
    b == b; //true
    "Hello" == "Hell"; // false
    "Hello" == "hello"; // false
    "5" == 5; // true

    // === - Равняется ли строго?
    "5" === 5; // false

    // !=  - Не равняется?
    a != 5; // false
    b != 18; // true
    "Hello" != "Hell"; // true
    "Hello" != "hello"; //  true
    "5" != 5; // false

    // !=  - Не равняется строго?
    "5" !== 5; // true
Ulan25.08.2020
// Взятье значения свойства для элемента
    window.getComputedStyle(ЭЛЕМЕНТ)[СВОЙСТВО]
// Заменить кусок текста
    СТРОКА.replace(ЧТО ЗАМЕНЯЕМ, НА ЧТО ЗАМЕНЯЕМ);
// Преобразовать в число
    parseInt(СТРОКА)
UlanСегодня, в 14:22
<!-- Формы в HTML <-->
<form action="" ></form>

<!-- ЗАПРОСЫ -->
GET-запрос : User => Server => User
POST(GET)-запрос : User => Server
Почему при POST нам возвращают GET?